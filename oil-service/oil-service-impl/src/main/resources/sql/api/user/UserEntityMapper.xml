<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.oil.av.dao.api.user.UserDao">
	<resultMap id="UserResult" type="com.oil.av.entity.api.user.UserEntity">
			<result property="id" column="id" />	
			<result property="code" column="code" />	
			<result property="password" column="password" />	
			<result property="nick" column="nick" />	
			<result property="userSexEnum" column="sex" />
			<result property="avatar" column="avatar" />	
			<result property="signature" column="signature" />	
			<result property="profile" column="profile" />	
			<result property="address" column="address" />	
			<result property="birthday" column="birthday" />	
			<result property="phone" column="phone" />	
			<result property="userStateEnum" column="state" />
			<result property="isMember" column="is_member" />	
			<result property="lastLoginTime" column="last_login_time" />	
			<result property="lastIp" column="last_ip" />	
			<result property="lastDevice" column="last_device" />	
			<result property="lastDeviceSerial" column="last_device_serial" />	
			<result property="lastToken" column="last_token" />	
			<result property="createUser" column="create_user" />	
			<result property="createTime" column="create_time" />	
			<result property="modifyUser" column="modify_user" />	
			<result property="modifyTime" column="modify_time" />	
			<result property="wrongTimes" column="wrong_times" />	
			<result property="wrongDate" column="wrong_date" />	
			<result property="userPublicMessageEnum" column="public_message" />
	</resultMap>
	<sql id="selectAllColumns">
		<![CDATA[	
		select
		id,code,password,nick,sex,avatar,signature,profile,address,birthday,phone,state,is_member,last_login_time,last_ip,last_device,last_device_serial,last_token,create_user,create_time,modify_user,modify_time,wrong_times,wrong_date,public_message
		from t_user	  
		]]>
	</sql>
	
	<sql id="whereAllColumns">
			where 1=1
		<if test="params.id !=null and params.id !=''">
			and id = #{params.id}  
		</if>		
		<if test="params.code !=null and params.code !=''">
			and code = #{params.code}  
		</if>		
		<if test="params.password !=null and params.password !=''">
			and password = #{params.password}  
		</if>		
		<if test="params.nick !=null and params.nick !=''">
			and nick = #{params.nick}  
		</if>		
		<if test="params.userSexEnum !=null">
			and sex = #{params.userSexEnum}
		</if>		
		<if test="params.avatar !=null and params.avatar !=''">
			and avatar = #{params.avatar}  
		</if>		
		<if test="params.signature !=null and params.signature !=''">
			and signature = #{params.signature}  
		</if>		
		<if test="params.profile !=null and params.profile !=''">
			and profile = #{params.profile}  
		</if>		
		<if test="params.address !=null and params.address !=''">
			and address = #{params.address}  
		</if>		
		<if test="params.birthday !=null">
			and birthday = #{params.birthday}  
		</if>				
		<if test="params.phone !=null and params.phone !=''">
			and phone = #{params.phone}  
		</if>		
		<if test="params.userStateEnum !=null">
			and state = #{params.userStateEnum}
		</if>		
		<if test="params.isMember !=null">
			and is_member = #{params.isMember}  
		</if>				
		<if test="params.lastLoginTime !=null">
			and last_login_time = #{params.lastLoginTime}  
		</if>				
		<if test="params.lastIp !=null and params.lastIp !=''">
			and last_ip = #{params.lastIp}  
		</if>		
		<if test="params.lastDevice !=null and params.lastDevice !=''">
			and last_device = #{params.lastDevice}  
		</if>		
		<if test="params.lastDeviceSerial !=null and params.lastDeviceSerial !=''">
			and last_device_serial = #{params.lastDeviceSerial}  
		</if>		
		<if test="params.lastToken !=null and params.lastToken !=''">
			and last_token = #{params.lastToken}  
		</if>		
		<if test="params.createUser !=null and params.createUser !=''">
			and create_user = #{params.createUser}  
		</if>		
		<if test="params.createTime !=null">
			and create_time = #{params.createTime}  
		</if>				
		<if test="params.modifyUser !=null and params.modifyUser !=''">
			and modify_user = #{params.modifyUser}  
		</if>		
		<if test="params.modifyTime !=null">
			and modify_time = #{params.modifyTime}  
		</if>				
		<if test="params.wrongTimes !=null">
			and wrong_times = #{params.wrongTimes}
		</if>					
		<if test="params.wrongDate !=null">
			and wrong_date = #{params.wrongDate}  
		</if>				
		<if test="params.userPublicMessageEnum !=null">
			and public_message = #{params.userPublicMessageEnum}
		</if>		
	</sql>
	
	
	
	
	<select id="get" parameterType="Long" resultMap="UserResult">
	    <include refid="selectAllColumns" />
		 where id = #{id}
	</select>

	<select id="getAll" resultMap="UserResult">
		<include refid="selectAllColumns" />
	</select>
	
	<select id="getUserEntityListByConditions"  resultMap="UserResult">
		<include refid="selectAllColumns" />
		<include refid="whereAllColumns" />
		<![CDATA[	limit #{pager.startIndex},#{pager.pageSize}]]> 
	</select>	
	<select id="getUserEntityCountsByConditions"  resultType="Long">
		<![CDATA[	select count(*) from t_user ]]> 
		<include refid="whereAllColumns" />
	</select>			
	<update id="update" parameterType="com.oil.av.entity.api.user.UserEntity">
		<![CDATA[
		update t_user set  
		id= #{id},code= #{code},password= #{password},nick= #{nick},sex= #{userSexEnum},avatar= #{avatar},signature= #{signature},profile= #{profile},address= #{address},birthday= #{birthday},phone= #{phone},state= #{userStateEnum},is_member= #{isMember},last_login_time= #{lastLoginTime},last_ip= #{lastIp},last_device= #{lastDevice},last_device_serial= #{lastDeviceSerial},last_token= #{lastToken},modify_user= #{modifyUser},modify_time= now(),wrong_times= #{wrongTimes},wrong_date= #{wrongDate},public_message= #{userPublicMessageEnum}
		where id = #{id}
		]]>
	</update>
	
	
	<insert id="insert" parameterType="com.oil.av.entity.api.user.UserEntity" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
	<![CDATA[
		insert into t_user(code,password,nick,sex,avatar,signature,profile,address,birthday,phone,state,is_member,last_login_time,last_ip,last_device,last_device_serial,last_token,create_user,create_time,modify_user,modify_time,wrong_times,wrong_date,public_message)
		values(#{code},#{password},#{nick},#{userSexEnum},#{avatar},#{signature},#{profile},#{address},#{birthday},#{phone},#{userStateEnum},#{isMember},#{lastLoginTime},#{lastIp},#{lastDevice},#{lastDeviceSerial},#{lastToken},#{createUser},now(),#{modifyUser},now(),#{wrongTimes},#{wrongDate},#{userPublicMessageEnum})
	]]>
	</insert>
	
	 <!-- 根据主键删除一条记录 -->  
    <delete id="delete" parameterType="Long">  
    <![CDATA[
        delete from t_user where id = #{id}
    ]]>
    </delete> 
</mapper>